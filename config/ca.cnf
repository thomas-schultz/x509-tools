# OpenSSL CA configuration file.

[ ca ]
default_ca              = ca_default


[ ca_default ]
# Directory and file locations.
dir                     = $ENV::ca_dir
certs                   = $dir/certs
crl_dir                 = $dir/crl
new_certs_dir           = $dir/newcerts
database                = $dir/index.txt
serial                  = $dir/serial
RANDFILE                = $dir/private/.rand
private_key             = $dir/private/key.pem
certificate             = $dir/certs/cert.pem
crl                     = $dir/crl/crl.pem
crl_extensions          = v3_crl
default_crl_days        = {{ crl_days }}
default_days            = {{ ca_days }}

default_md              = sha256
name_opt                = ca_default
cert_opt                = ca_default
preserve                = no
unique_subject          = yes
policy                  = {{ policy }}


[ policy_strict ]
# The CA should only sign intermediate certificates that match.
countryName             = match
localityName            = optional
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = supplied

[ policy_moderate ]
# Allow the CA to sign a more diverse range of certificates
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the CA to sign a more diverse range of certificates.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = supplied

[ policy_ocsp ]
# Allow the CA to sign a more diverse range of certificates
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional


[ req ]
# Options for the `req` tool (`man req`).
default_bits            = {{ cert_bits }}
string_mask             = utf8only
distinguished_name      = req_distinguished_name

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address
0.subjectAltName                = Subject Alternative Name

# Optionally, specify some defaults.
countryName_default             = {{ countryName }}
stateOrProvinceName_default     = {{ stateOrProvinceName }}
localityName_default            = {{ localityName }}
0.organizationName_default      = {{ organizationName }}
organizationalUnitName_default  = {{ organizationalUnitName }}
emailAddress_default            = {{ emailAddress }}
commonName_default              = {{ commonName }}
0.subjectAltName                = {{ altName0 }}


[ issuer_info ]
caIssuers;URI.0                 = {{ issuerUrl }}

[ crl_info ]
URI.0                           = {{ crlUrl }}

[ ocsp_info ]
caIssuers;URI.0                 = {{ issuerUrl }}
OCSP;URI.0                      = {{ ocspUrl }}


[ v3_crl ]
authorityKeyIdentifier          = keyid:always
authorityInfoAccess             = @issuer_info

[ v3_ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints                = CA:FALSE
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical,digitalSignature
extendedKeyUsage                = critical,OCSPSigning

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid:always,issuer
basicConstraints                = critical,CA:true
keyUsage                        = critical,digitalSignature,cRLSign,keyCertSign
crlDistributionPoints           = @crl_info
authorityInfoAccess             = @ocsp_info

[ v3_sub_ca ]
# Extensions for a typical intermediate CA, which may have further intermediate CAs
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid:always,issuer
basicConstraints                = critical,CA:true
keyUsage                        = critical,digitalSignature,cRLSign,keyCertSign
crlDistributionPoints           = @crl_info
authorityInfoAccess             = @ocsp_info

[ v3_end_ca ]
# Extensions for a typical intermediate CA, which only can issue certificates
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid:always,issuer
basicConstraints                = critical,CA:true,pathlen:0
keyUsage                        = critical,digitalSignature,cRLSign,keyCertSign
crlDistributionPoints           = @crl_info
authorityInfoAccess             = @ocsp_info


[ server_cert ]
basicConstraints                = CA:FALSE
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer:always
keyUsage                        = critical,digitalSignature,keyEncipherment
extendedKeyUsage                = serverAuth
crlDistributionPoints           = @crl_info
authorityInfoAccess             = @ocsp_info
subjectAltName                  = @alt_names

[ client_cert ]
basicConstraints                = CA:FALSE
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage                = clientAuth, emailProtection
crlDistributionPoints           = @crl_info
authorityInfoAccess             = @ocsp_info
subjectAltName                  = @alt_names

# do not move, file gets appended here
[alt_names]
